{"version":3,"file":"static/js/517.7a7525b9.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__AjU87\",\"logo\":\"Profile_logo__BxT-Y\",\"pic\":\"Profile_pic__o4-zg\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"ProfileInfo_content__wViMn\",\"person__img\":\"ProfileInfo_person__img__mpfzV\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    // let stateWithSetState = useState(false );\r\n    // let editMode = stateWithSetState[0];\r\n    // let setEditMode = stateWithSetState[1];\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {setStatus(props.status)}, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // if (props.profile == null || props.profile == undefined)\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className=\"person__content\">\r\n                <div className={s.person__img}>\r\n                    <img src={props.profile.photos.large} alt=\"\" className=\"person__pic\"/>\r\n                </div>\r\n                <div className=\"person__desc\">\r\n                    <div className=\"person__name\">Vitalii Tkachenko</div>\r\n\r\n                    <ProfileStatusWithHooks  status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n                    {/*<div className=\"person__date\">Date of Birth: 30.09.1996</div>*/}\r\n                    {/*<div className=\"person__city\">City: Lviv</div>*/}\r\n                    {/*<div className=\"perscon__education\">Educatin: LNMA `20</div>*/}\r\n                    {/*<div className=\"person__site\">Web site:</div>*/}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__8MA50\",\"title\":\"MyPosts_title__vfLjU\",\"textarea\":\"MyPosts_textarea__SBme6\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__+ew-N\",\"image\":\"Post_image__NKaYK\",\"content\":\"Post_content__38Z0K\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            Post {props.number}\r\n            <div className={s.content}>\r\n                <div className={s.image}>\r\n                    <img src=\"https://photopict.ru/wp-content/uploads/2019/05/kartinki-dlya-stima-12.jpg\"\r\n                         alt=\"\" className={s.img}/>\r\n                </div>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n            <div className={s.likes}>\r\n                likes:{props.likesCount}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} number={p.number} likesCount={p.likesCount} key={p.id}/>);\r\n\r\n    // let newPostElement = React.createRef();\r\n\r\n    // let onAddPost = () => {\r\n    //     props.addPost();\r\n    // };\r\n\r\n    // let onPostChange = () => {\r\n    //     let text = newPostElement.current.value;\r\n    //     props.updateNewPostText(text);\r\n    // };\r\n\r\n    const onAddPost = (values) =>{\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.title}>\r\n                My posts\r\n            </div>\r\n            {/*<div className={s.add} >*/}\r\n            {/*    <textarea className={s.textarea} ref={newPostElement} onChange={onPostChange} value={props.newPostText}*/}\r\n            {/*           placeholder={'create new post'}/>*/}\r\n            {/*    <button className={s.btn} onClick={onAddPost}> Add post</button>*/}\r\n            {/*</div>*/}\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form className={s.add} onSubmit={props.handleSubmit}>\r\n                <Field className={s.textarea} component={Textarea} name=\"newPostText\" placeholder=\"create new post\"\r\n                       validate={[required, maxLength10]}/>\r\n                <button className={s.btn}> Add post</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'}) (AddNewPostForm)\r\n\r\n\r\nexport default React.memo(MyPosts);","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        },\r\n        // updateNewPostText: (text) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from '../Profile/Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.logo}>\r\n                <img className={s.pic}\r\n                     src=\"https://helpx.adobe.com/content/dam/help/en/photoshop/using/convert-color-image-black-white/jcr_content/main-pars/before_and_after/image-before/Landscape-Color.jpg\"\r\n                     alt=\"\"/>\r\n            </div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    };\r\n\r\n    render() {\r\n        // console.log('RENDER');\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    // console.log('mapStateToProps PROFILE');\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","profile","className","s","src","photos","large","alt","Preloader","number","message","likesCount","MyPosts","postsElements","posts","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","React","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter"],"sourceRoot":""}