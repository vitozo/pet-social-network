{"version":3,"file":"static/js/469.1d8d4ef2.chunk.js","mappings":"8KACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,cAAgB,+BAA+B,OAAS,wBAAwB,SAAW,2B,mBCU3L,EAPmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,eAAIC,UAAWC,EAAAA,cAAkB,IAAMA,EAAAA,OAAvC,UACH,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCMlC,EAVgB,SAACN,GACb,OACI,0BACI,gBAAKG,UAAWC,EAAAA,QAAhB,SACKJ,EAAMO,a,uCCiDjBC,GAAeC,EAAAA,EAAAA,GAAiB,KAahCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAXL,SAACX,GACpB,OACI,0BACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAeF,KAAK,iBAAiBc,YAAY,uBAClG,6CAQhB,EA9DgB,SAACpB,GACb,IAAIqB,EACArB,EAAMsB,YAAYC,QAAQC,KAAI,SAACC,GAC3B,OAAO,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAiBJ,GAAIuB,EAAEvB,IAAZuB,EAAEvB,OAG5CwB,EACA1B,EAAMsB,YAAYK,SAASH,KAAI,SAACI,GAC5B,OAAO,SAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE1B,OAiBnD,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,UACI,eAAID,UAAWC,EAAAA,cAAf,SACKiB,OAGT,gBAAKlB,UAAWC,EAAAA,aAAhB,UACI,gBAAKD,UAAWC,EAAAA,kBAAhB,SACKsB,OAQT,SAAChB,EAAD,CAAqBG,SArBP,SAACgB,GACnB7B,EAAM8B,YAAYD,EAAOE,uB,wCC3B7BC,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,SCsD3B,GAAeE,E,MAAAA,KACXC,EAAAA,EAAAA,KAtBkB,SAACJ,GACnB,MAAO,CACHX,YAAaW,EAAMX,gBAIF,SAACgB,GACtB,MAAO,CAIHR,YAAa,SAACC,GACVO,GAASC,EAAAA,EAAAA,GAAmBR,UDzCR,SAACS,GAO7B,OAFqCH,EAAAA,EAAAA,IAAQL,EAARK,EAJb,SAACrC,GACrB,OAAKA,EAAMkC,QACJ,SAACM,GAAD,UAAexC,KADI,SAAC,KAAD,CAAUK,GAAG,gBCgD/C,CAGGoC","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__iLFql\",\"dialogs__col\":\"Dialogs_dialogs__col__gX3Yh\",\"dialogs__list\":\"Dialogs_dialogs__list__knE9p\",\"active\":\"Dialogs_active__VQaax\",\"textarea\":\"Dialogs_textarea__RmRiA\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <li className={s.dialogs__item + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </li>\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElement =\r\n        props.dialogsPage.dialogs.map((d) => {\r\n            return <DialogItem name={d.name} key={d.id} id={d.id}/>\r\n        });\r\n\r\n    let messageElements =\r\n        props.dialogsPage.messages.map((m) => {\r\n            return <Message message={m.message} key={m.id}/>\r\n        });\r\n\r\n    // let newMessageBody = props.dialogsPage.newMessageBody;\r\n    // const onSendMessageClick = () => {\r\n    //     props.sendMassage();\r\n    // };\r\n\r\n    // const onNewMessageChange = (e) => {\r\n    //     let body = e.target.value;\r\n    //     props.updateNewMessageBody(body);\r\n    // };\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMassage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs__col}>\r\n                <ul className={s.dialogs__list}>\r\n                    {dialogsElement}\r\n                </ul>\r\n            </div>\r\n            <div className={s.dialogs__col}>\r\n                <div className={s.dialogs__messages}>\r\n                    {messageElements}\r\n                </div>\r\n            </div>\r\n            {/*<textarea className={s.textarea} onChange={onNewMessageChange}*/}\r\n            {/*    // ref={textareaElem}*/}\r\n            {/*          placeholder={'enter new message'}*/}\r\n            {/*          value={newMessageBody}/>*/}\r\n            {/*<button onClick={onSendMessageClick}>Send</button>*/}\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field component={Textarea} validate={[required, maxLength100]} name=\"newMessageBody\" placeholder=\"Enter new message\"/>\r\n                <button>Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Redirect to=\"/login\"/>;\r\n        return <Component {...props} />\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};\r\n\r\n// class RedirectComponent extends React.Component {\r\n//     render () {\r\n//         if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n//         return <Component {...this.props} />\r\n//     }\r\n// };\r\n// return RedirectComponent","import Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n//\r\n// export default DialogsContainer;\r\n\r\n// const DialogsContainer = (props) => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 let state = store.getState().dialogsPage;\r\n//\r\n//                 const onSendMessageClick = () => {\r\n//                     store.dispatch(sendMessageCreator());\r\n//                 };\r\n//\r\n//                 const onNewMessageChange = (body) => {\r\n//                     store.dispatch(updateNewMessageBodyActionCreator(body));\r\n//                 };\r\n//                 return (\r\n//                     <Dialogs dialogsPage={state} sendMassage={onSendMessageClick}\r\n//                              updateNewMessageBody={onNewMessageChange}/>\r\n//                 )\r\n//             }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\n\r\n// let AuthRedirectComponent = (props) => {\r\n//     if (!props.isAuth) return <Redirect to=\"/login\" />;\r\n//     return <Dialogs {...props} />\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // updateNewMessageBody: (body) => {\r\n        //     dispatch(updateNewMessageBodyActionCreator(body))\r\n        // },\r\n        sendMassage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogsElement","dialogsPage","dialogs","map","d","messageElements","messages","m","values","sendMassage","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","Dialogs"],"sourceRoot":""}